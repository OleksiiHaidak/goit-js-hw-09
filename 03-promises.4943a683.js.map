{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAI3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CAZaN,SAASC,cAAc,UAiB/BY,iBAAiB,SAAUC,IAC3CA,EAAEC,iBAEF,MAAMC,EAAQC,OAAOlB,EAAWmB,OAC1BC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAElC,GAAIC,EAAO,GAAKH,EAAQ,GAAKI,GAAU,EACrCvB,EAAAwB,OAAOC,QAAQ,0DAIjB,IAAK,IAAIC,EAAW,EAAGA,GAAYH,EAAQG,IAAY,CAErDnB,EAAcmB,EADGP,GAASO,EAAW,GAAKJ,GACRK,MAAK,EAACnB,SAACA,EAAQC,MAAEA,MACjDT,EAAAwB,OAAOI,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAC9DoB,OAAM,EAACrB,SAACA,EAAQC,MAAEA,MACnBT,EAAAwB,OAAOC,QAAQ,sBAAoBjB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputDelay = document.querySelector(\"input[name='delay']\");\nconst inputStep = document.querySelector(\"input[name='step']\");\nconst inputAmount = document.querySelector(\"input[name='amount']\");\nconst btnCreatePromises = document.querySelector('button');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n};\n\n\nbtnCreatePromises.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n\n  const delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n\n  if (step < 0 || delay < 0 || amount <= 0) {\n    Notify.failure('Invalid input values. All values must be positive');\n    return;\n  };\n\n  for (let position = 1; position <= amount; position++) {\n    const newDelay = delay + (position - 1) * step;\n    createPromise(position, newDelay).then(({position, delay}) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({position, delay}) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n});\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","Notify","failure","position1","then","success","catch"],"version":3,"file":"03-promises.4943a683.js.map"}